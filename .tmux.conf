unbind C-b
set -g prefix `                   # use tilde key as prefix
bind `     send-key `             # insert tilde by pressing twice

# Reload tmux config with `r
unbind r
bind r source-file ~/.tmux.conf

# Cool tmux 2.1 mouse stuff.
set -g mouse-utf8 on
set -g mouse on

set -g @continuum-restore 'on'
set -g default-terminal "screen-256color"
set -g history-limit 100000

set-option -g allow-rename off

# Unicode support.
setw -g utf8 on
set -g status-utf8 on

# if you're running tmux within iTerm2
#   - and tmux is 1.9 or 1.9a
#   - and iTerm2 is configured to let option key act as +Esc
#   - and iTerm2 is configured to send [1;9A -> [1;9D for option + arrow keys
# then uncomment the following line to make Meta + arrow keys mapping work
set -g terminal-overrides "*:kUP3=\e[1;9A,*:kDN3=\e[1;9B,*:kRIT3=\e[1;9C,*:kLFT3=\e[1;9D"

# Set status bar to show battery level.
set -g status-right "#{battery_percentage} | %b-%d %H:%M "

# Copy-paste integration
set-option -g default-command "reattach-to-user-namespace -l bash"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"


bind-key c  new-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -c "#{pane_current_path}"

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind-key Left if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key Down if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key Up if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key Right if-shell "$is_vim" "send-keys C-l" "select-pane -R"
#bind-key C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Send the same command to all panes/windows/sessions
bind    E command-prompt -p "Command:" \
          "run \"tmux list-sessions                  -F '##{session_name}'        | xargs -I SESS \
                 tmux list-windows  -t SESS          -F 'SESS:##{window_index}'   | xargs -I SESS_WIN \
                 tmux list-panes    -t SESS_WIN      -F 'SESS_WIN.##{pane_index}' | xargs -I SESS_WIN_PANE \
                 tmux send-keys     -t SESS_WIN_PANE '%1' Enter\""


run-shell /Users/jesse/.tmux/plugins/tmux-resurrect/resurrect.tmux
run-shell /Users/jesse/.tmux/plugins/tmux-continuum/continuum.tmux
run-shell /Users/jesse/.tmux/plugins/tmux-battery/battery.tmux
run-shell /Users/jesse/.tmux/plugins/tmux-scroll-copy-mode/scroll_copy_mode.tmux
